worker_processes     auto;
worker_rlimit_nofile 32768;
pid                  nginx.pid;
daemon               off;

events {
    multi_accept        on;
    worker_connections  8192;
    use                 epoll;
}

http {
    include                       /etc/nginx/mime.types;
    default_type                  application/octet-stream;
    keepalive_requests            100;
    keepalive_timeout             10s;
    client_max_body_size          2m;
    client_body_temp_path         /tmp/nginx_client_body_temp_path;
    proxy_temp_path               /tmp/nginx_proxy_temp_path;
    fastcgi_temp_path             /tmp/nginx_fastcgi_temp_path;
    sendfile                      on;
    gzip                          on;
    gzip_vary                     on;
    gzip_proxied                  any;
    gzip_types                    text/css text/javascript application/x-javascript application/javascript;
    charset                       utf-8;
    server_names_hash_bucket_size 128;
    proxy_intercept_errors        on;
    tcp_nopush                    on;
    tcp_nodelay                   on;

    log_format main '{'
        '"remote_addr": "$remote_addr",'
        '"remote_user": "$remote_user",'
        '"server_name": "$server_name",'
        '"server_port": "$server_port",'
        '"host": "$host",'
        '"time_local": "$time_local",'
        '"request_time": $request_time,'
        '"request": "$request",'
        '"status": $status,'
        '"body_bytes_sent": $body_bytes_sent,'
        '"http_referer": "$http_referer",'
        '"http_user_agent": "$http_user_agent",'
        '"http_x_forwarded_for": "$http_x_forwarded_for",'
        '"request_uri": "$request_uri",'
        '"uri": "$uri",'
        '"args": "$args",'
        '"event_name": "NGINX_LOG"'
    '}';

    access_log /dev/stdout main;
    error_log  /dev/stderr;

    upstream app {
        server 127.0.0.1:8400;
        keepalive 256;
    }

    types {
        text/plain yml;
    }

    server {
        listen 80;
        listen 443 ssl http2;
        server_name conductor 127.0.0.1;

        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        ssl_certificate           /app/ssl/fullchain.pem;
        ssl_certificate_key       /app/ssl/privkey.pem;
        ssl_dhparam               /app/ssl/dhparam.pem;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve            secp384r1;
        ssl_session_cache         shared:SSL:10m;
        ssl_session_tickets       off;

        if ($scheme = http) {
            set $redirect_to_https true;
        }

        if ($http_x_forwarded_proto != "https") {
            set $redirect_to_https true;
        }

        if ($hostname = conductor-dev) {
            set $redirect_to_https false;
        }

        if ($request_uri = /healthz) {
            # Allow health checks on both port 80 and 443.
            set $redirect_to_https false;
        }

        if ($redirect_to_https = true) {
            rewrite ^(.*) https://$host$1;
        }

        # Health check
        location /healthz {
            add_header Content-Type text/plain;
            return 200 OK;
        }

        # API
        location /api {
            proxy_pass http://app;
        }

        # Web UI root
        location / {
            try_files $uri /index.html;
        }

        # Swagger docs root
        location /api/help {
            try_files $uri /api/help/index.html;
        }

        # Swagger docs static content
        location ~ ^/api/help/(.+\.(?:html|css|js|ttf|png|yml))$ {
            alias /app/swagger/$1;
        }

        # Favicon
        location = /favicon.ico {
            root /app/frontend/images/;
        }

        # Generated static content
        location ~ ^/gen/.*$ {
            root /app/frontend/;
        }

        # Web UI static content
        location ~ .+\.(html|css|js|ico|png|svg|ttf|eot|woff2?)$ {
            root /app/frontend/;
            try_files $uri /gen$uri;
        }
    }
}
